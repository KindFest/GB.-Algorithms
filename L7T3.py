# Урок 7. Практическое задание 3.
# ФИО: Артур Назарян
# Курс: Алгоритмы и структуры данных на Python. Базовый курс
# Факультет: Geek University Python-разработки
#
# Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом. Найдите в массиве
# медиану. Медианой называется элемент ряда, делящий его на две равные части: в одной находятся
# элементы, которые не меньше медианы, в другой — не больше медианы.
#
# Примечание: задачу можно решить без сортировки исходного массива. Но если это слишком сложно,
# используйте метод сортировки, который не рассматривался на уроках (сортировка слиянием также
# недопустима).
import random
"""
Два варианта решения нахождения медианы массива представлены ниже (но оба мне не нравятся :(, 
однако формально задача решена)
С другой стороны, я проанализировал оба варианта с помощью timeIt и cProfile с целью выявить лучший.
На мое удивление вариант с list.remove() быстрее, чем list.pop(). Получается, что использование
дополнительного метода list.index() нивелирует преимущество от удаления последнего элемента списка.
"""


def find_median(arr):
    result = arr[0]
    for i in range(len(arr) // 2 + 1):
        result = min(arr)
        arr.remove(result)
    return result


def find_median_1(arr):
    arr_size = len(arr)
    for i in range(len(arr) // 2):
        result_ind = arr.index(min(arr))
        if result_ind != arr_size:
            arr[result_ind], arr[arr_size - 1] = arr[arr_size - 1], arr[result_ind]
        arr.pop()
        arr_size -= 1
    return min(arr)


size_lst = int(input('Введите размер массива: '))
array = [random.randint(0, 100) for i in range(size_lst * 2 + 1)]
array_1 = array.copy()
array_2 = array.copy()
print(f'Медианой массива {array_1} является число {find_median(array_1)}')
print(f'Медианой массива {array_2} является число {find_median_1(array_2)}')
