# Урок 3. Практическое задание 1.
# ФИО: Артур Назарян
# Курс: Алгоритмы и структуры данных на Python. Базовый курс
# Факультет: Geek University Python-разработки
#
# В диапазоне натуральных чисел от 2 до 99 определить, сколько из них
# кратны каждому из чисел в диапазоне от 2 до 9.
#
# 1 вариант решения. Вложенные циклы. По замерам этот алгоритм медленнее, однако можно
# организовать вывод словаря прямо в цикле. Он мне нравится больше.

result_dict = {2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}
print('Расчет количества чисел в диапазоне от 2 до 99, которые кратны числам в диапазоне от 2 до 9')
for i in range(2, 10):
    for n in range(2, 100):
        if n % i == 0:
            result_dict[i] += 1
    print(f'{i} -> {result_dict[i]}')

# 2 вариант решения. Просто набор if в одном цикле. Для вывода словаря испольуется отдельный цикл.
# Еще заметил один момент. Если поменять местами эти решения, то время выполнения для
# вложенных циклов сокращается, примерно в 10% случаев он становится даже быстрее. При этом
# решение с одним циклом практически не замедляется.

result_dict = {2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}
print('Расчет количества чисел в диапазоне от 2 до 99, которые кратны числам в диапазоне от 2 до 9')
for n in range(2, 100):
    if n % 2 == 0:
        result_dict[2] += 1
    if n % 3 == 0:
        result_dict[3] += 1
    if n % 4 == 0:
        result_dict[4] += 1
    if n % 5 == 0:
        result_dict[5] += 1
    if n % 6 == 0:
        result_dict[6] += 1
    if n % 7 == 0:
        result_dict[7] += 1
    if n % 8 == 0:
        result_dict[8] += 1
    if n % 9 == 0:
        result_dict[9] += 1
for i in range(2, 10):
    print(f'{i} -> {result_dict[i]}')
